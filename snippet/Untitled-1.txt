ova(a, b): subscribeToRootMenuRemoval(element, callback)
pva(a, b, c, d): addPollChoiceInputListener(cardObject, inputElement, callback, inputId)
qva(a): getCardEventTarget(cardObject)
U1(a): updateCardState(cardObject)
rva(...args): flattenArguments(args)
sva(a, b, c, d): findChildElements(element, predicate, resultArray, recursive)
V1(a, b): findFirstChildElement(element, predicate)
vva(a, b, c): extractElementText(element, textArray, removeLineBreaks)
W1(a): getNormalizedElementText(element)
wva(a): createBoundingBoxFromRect(rectObject)
X1(a): isElementRtl(element)
Ava(a): getFontSizeInPixels(element)
Y1
Z1
$1
c2
Cva
Bva
Eva
d2
Dva
Fva
e2
f2
Gva
Hva
Iva
Jva(a, b, c, d, e, f, k): positionElementWithConstraints(position, element, alignment, margin, constraintRect, allowClipping, referencePosition)
g2(a, b, c, d, e, f, k): calculateElementPosition(element, alignment, referenceElement, referenceAlignment, offset, constraintRect, allowClipping, referencePosition)
h2(a, b): removeDataAttribute(element, attributeName)
i2(a): generateUniqueId(element)
j2(a, b): isElementDescendant(element, potentialAncestor)
Kva(a, b): findElementByTag(tagName, contextElement)
Lva(): showHiddenPlayers()
Mva(a): simulateClickEvent(element)
Nva
k2(a): convertDataToVisualElementObject(data)
l2(a): createVisualElementObject(trackingParams)
Ova(): getCurrentVisualElementObject()
Pva(a, b): setElementVisibility(element, isVisible)
m2(a): isElementVisible(element)
n2(a): showElements(elements)
o2(a): hideElements(elements)
p2
q2(a, b): createSvgElement(svgElement, context)
u2(a, b, c, d): createSvgPathElement(pathElement, context, stroke, fill)
Sva
Tva(a, b): createSvgGroupElement(groupElement, context)
v2
? w2(a, b, c, d): addArcToPath(pathObject, radiusX, radiusY, angle, endX, endY)?
Vva(a, b): iterateOverPathCommands(pathObject, callback)
Wva(a, b, c, d): createSvgRectElement(rectElement, context, stroke, fill)
x2
y2(a, b, c, d, e): createSvgElementBase(width, height, viewBoxWidth, viewBoxHeight, renderer)
Qva(a): getSvgScaleFactor(svgObject)
s2
r2
z2
Xva
A2
t2(a, b, c): createSvgElementWithAttributes(svgObject, elementName, attributes)
B2(a, b, c, d): addPathToSvg(svgObject, pathObject, stroke, fill)
Yva(a): convertPathToSvgString(pathObject)
Rva(a, b, c): addSvgDefinition(svgObject, definitionId, definitionElement)
$va(): getSvgAnimationTicker()
bwa(a, b, c): logChildVisualElementAttachment(csn, parentElement, childElements)
D2(a, b): logVisualElementShown(csn, element)
E2(a, b): logVisualElementClick(csn, element)
awa(a, b): logInteractionEvent(loggerInstance, eventData)
F2(a, b): convertEndscreenData(data, target)
G2(a): isCreatorEndscreen(playerStyle)
H2
I2(a, b): updateCreatorEndscreen(endscreenObject, data)
cwa(a): logEndscreenImpression(endscreenObject)
dwa(a, b): createEndscreenElement(endscreenObject, elementData)
J2(a): createEndscreenElementBackgroundStyle(image)
fwa(a): createBackgroundImageStyle(imageUrl)
ewa(a, b, c): addEndscreenElementEventListeners(endscreenObject, element, elementData)
K2(a, b, c): updateEndscreenElementVisibility(endscreenObject, elementId, isVisible)
L2(a, b, c): sendImpressionPing(endscreenObject, urls, callback)
M2(a, b, c): handleEndscreenElementClick(endscreenObject, elementData, callback)
gwa(a, b): generatePingUrls(endscreenObject, urls)
hwa(a, b): replacePingUrlPlaceholders(url, replacements)
N2(a): getFirstArrayElement(array)
O2(a): ensureString(value)
P2(a, b): parseColorString(colorString, defaultColor)
Q2(a): convertToString(value)
R2(a, b, c): getEnumValue(value, enumObject, defaultValue)
S2(a, b): parseBoolean(value, defaultValue)
T2(a, b): parseFloatValue(value, defaultValue)
! U2(a, b, c, d, e): parseAndClampValue(value, min, max, allowFloat, defaultValue)
iwa(a): parseTimeString(timeString)
V2(a, b): mapArray(array, mappingFunction)
jwa(a): parsePaddingObject(paddingObject)
kwa(a): parseEffectsString(effectsString)
lwa
W2(a): createLinkObject(linkData)
X2(a): getLinkValue(linkObject)
nwa(a, b, c): createActionObject(type, trigger, url)
qwa(a): createActionFromData(data)
rwa(a, b, c): calculateScaledWidth(containerSize, elementWidth, scaleDimension)
Y2(a, b, c): calculateScaledHeight(containerSize, elementHeight, scaleDimension)
Z2(a, b, c, d, e, f, k, l, m, n, p): createAnnotationPositionObject(x, y, width, height, time, depth, offsetX, offsetY, scaleX, scaleY, scaleDimension)
twa(a, b): createAnnotationPositionFromData(data, constructor)
$2(a, b): calculateFinalAnnotationPosition(positionObject, context)
vwa(a, b, c): calculateScaledAnnotationRect(positionObject, rect, containerSize)
wwa(a): createAnnotationPositionFromData(data)
xwa(a, b): createAnnotationContext(containerRect, anchorPosition)
uwa(a, b): calculateAbsolutePosition(context, rect)
ywa(a, b, c, d, e, f, k, l, m, n, p, r, v): createAnchoredAnnotationPositionObject(x, y, width, height, time, startX, startY, depth, offsetX, offsetY, scaleX, scaleY, scaleDimension)
zwa(a): createAnchoredAnnotationPositionFromData(data)
Awa(a, b, c, d, e, f, k, l, m, n, p, r, v, D): createAnnotationStyleObject(textColor, backgroundColor, borderColor, borderWidth, backgroundAlpha, highlightTextColor, highlightWidth, textAlign, textSize, fontWeight, padding, effects, cornerRadius, gradient)
Cwa(a): createAnnotationStyleFromData(data)
Bwa(a, b, c, d, e, f, k, l): createGradientObject(x1, y1, x2, y2, color1, color2, opacity1, opacity2)
Dwa(a, b, c, d): createAnnotationSegmentObject(type, rectRegions, anchoredRegions, shapelessRegions)
Fwa(a): createAnnotationSegmentFromData(data)
Gwa(a): getFirstSegmentRegion(segmentObject)
Hwa(a, b): createAnnotationSegment(space, regions)
Iwa(a, b): createConditionObject(state, referenceId)
Kwa(a): createConditionFromData(data)
Lwa(a, b, c, d): createTriggerObject(conditions, notConditions, showDelay, hideDelay)
Mwa(a): createTriggerFromData(data)
Nwa(a, b, c): evaluateTriggerConditions(triggerObject, evaluateFunction, context)
a3(a, b, c, d, e, f, k, l, m, n, p, r, v, D): createAnnotationObject(id, author, type, style, text, segment, actions, triggers, styleObject, coordinateSystem, isCloseable, data, logData, itct)
Qwa(a): createAnnotationFromData(data)
d3(a): getClickActions(annotationObject)
c3(a, b): findAction(annotationObject, predicate)
Rwa(a, b, c): executeActions(annotationObject, executeFunction, context)
Swa(a, b): findFirstAction(annotationObject, predicate)
Twa(a, b, c): addTriggerListener(annotationObject, listener, context)
Uwa(a, b): mapTriggers(annotationObject, mappingFunction)
e3(a): getFirstAnnotationRegion(annotationObject)
Vwa(a): getAnnotationSegment(annotationObject)
Wwa(a, b): calculateAnnotationScaleX(annotationObject, containerSize)
Ywa(a, b, c): createTriggerConditionListener(annotationId, triggerObject, eventTarget)
Xwa(a, b): generateTriggerConditionEventId(state, referenceId)
f3(): createAnnotationRendererBase()
g3(a, b, c): createSvgRenderer(rendererObject, width, height)
h3(a, b, c): createSvgElementWithChildren(elementName, attributes, children)
i3(a, b): appendSvgElementWithResult(svgObject, element)
Zwa(a, b): addBevelEffect(filterElement, inputId)
$wa(a, b): addDropShadowEffect(filterElement, inputId)
axa(a, b): defaultEffect(filterElement, inputId)
bxa(a): createFilterElementWithEffects(effects)
cxa(a): sortEffectsByPriority(effects)
dxa(a): getDropShadowOffset(effects)
exa(a, b, c): createRoundedRectPath(rect, cornerRadius, offset)
fxa
k3(a, b): calculateAnnotationBoundingRect(rect, effects)
gxa(a, b, c): addSvgFilters(svgObject, element, effects)
l3(): createSpeechBubbleRenderer()
hxa(a, b): determineBubblePointerPosition(rect, pointerPosition)
? m3(): createHighlightRenderer()
? n3(): createPopupRenderer()
? o3(): createSpeechBubbleRenderer()
p3(a, b, c, d, e): createAnnotationView(annotation, appendFunction, context, eventTarget, hasClickHandler)
ixa(a, b): addAnnotationViewMouseListeners(view, element)
jxa(a): addAnnotationViewCloseButton(view)
q3(a, b, c): createAnnotationViewEventHandler(view, eventName, callback)
s3(a): updateAnnotationViewPosition(view)
kxa(a, b, c, d, e): calculateAnnotationBubbleRect(view, bubbleHeight, rect, offsetBottom, offsetTop)
t3(a): isAnnotationTextOpaque(view)
r3(a): getAnnotationContext(view)
lxa(a, b): offsetPosition(position, offset)
u3
mxa(a, b): addAnnotationTriggerListeners(annotation, eventTarget)
nxa(a): removeAnnotationViewResizeListeners(view)
v3(a): clearAnnotationHideTimer(view)
oxa(a, b, c): createCollaboratorCard(id, data, context)
w3(a, b, c): createSimpleCard(id, data, context)
pxa(a, b, c): createDonationCard(id, data, context)
qxa(a, b, c): createPlaylistCard(id, data, context)
rxa(a, b, c): createPollCard(id, data, context)
txa(a, b, c): createProductListingCard(id, data, context)
sxa(a): createOfferObject(data)
uxa(a, b, c): createTipCard(id, data, context)
vxa(a, b, c): createVideoCard(id, data, context)
x3(a, b, c): createEpisodeCard(id, data, context)
wxa(a): createCardLogger(context)
xxa(a): logCardDismissed(logger)
B3(a, b, c, d): logCardShown(logger, cardId, impressionUrls, extraData)
C3(a, b, c, d, e, f): logCardClick(logger, cardId, clickCallback, extraData, clickUrls, menuIndex)
D3(a, b): logCardClose(logger, cardId)
yxa(a, b): filterPingUrls(urls, filterPredicate)
z3(a, b, c, d): getCardPingUrls(logger, eventName, data, extraUrls)
A3(a, b, c, d, e): sendCardPing(logger, data, urls, callback, timeoutMs)
y3(a, b): createCardPingData(logger, cardId)
E3(a, b, c, d, e): logDrawerEvent(logger, eventId, eventType, pingUrls, cardId)
F3(a, b, c, d): logTeaserEvent(logger, eventType, cardId, pingUrls)
zxa(a, b, c, d, e, f, k): createCardContext(eventTarget, elementIdGenerator, languageCodeProvider, videoData, logger, player, webPlayerContext)
G3(a, b, c): createCardHandler(context, clickHandler, ypcHandler)
Bxa(a, b): createPollCardElement(handler, card)
L3(a, b, c, d): createSimpleCardElement(handler, card, clickCallback, signInCallback)
Dxa(a, b, c): createYpcBadgeCardElement(handler, card, cardClass)
N3(a, b): createCardMessageElement(handler, card)
J3(a, b): createCardImageElement(imageUrl, overlayElement)
M3(a, b): createCardMetaInfoElement(handler, card)
H3(a, b, c, d): createCardTextElement(handler, tagName, className, text)
Cxa(a, b): createCardActionElement(handler, card)
Axa(a, b): updatePollCardElement(card, element)
Exa(a, b, c, d): handleCardClick(handler, card, openInNewWindow, callback)
K3(a, b, c, d, e): addCardClickListeners(handler, element, card, clickCallback, signInCallback)
Fxa(a, b, c, d, e): addCardClickHandler(handler, elements, card, linkObject, callback)
Gxa(a): parseVideoDuration(durationString)
O3(a): isInternalUrl(url)
Hxa(a): extractDomainParts(url)
Ixa(a): getVideoStartTimeFromUrl(url)
Jxa(a): getVideoIdFromUrl(url)
Kxa(a, b, c): addChannelIdToUrl(channelId, loggedInUserId, url)
P3(a, b): determineTargetWindow(url, target)
Q3(a, b): createCardBase(element, context)
R3(a, b, c, d, e, f): addTimeRangeListener(cardBase, startTime, endTime, id, enterCallback, exitCallback)
Lxa(a): getTimeSinceLastShown(cardBase)
Mxa(a, b, c, d, e, f): handleCardLinkClick(cardBase, linkObject, annotation, logData, clickUrls, menuIndex)
U3(a, b, c): createCardDrawer(player, element, context)
Sxa(a, b): addCardToDrawer(drawer, card)
Txa(a, b): updateCardDrawer(drawer, drawerData)
Pxa(a, b): removeCardFromDrawer(drawer, cardId)
S3(a, b, c, d): showCardDrawer(drawer, triggerType, forceFocus, cardData)
T3(a): hideCardDrawer(drawer)
Oxa(a): addCardDrawerEventListeners(drawer)
Qxa(a, b): createCardElement(drawer, card)
Rxa(a, b): getCardIndex(drawer, cardData)
Vxa(a): isShoppingCardActive(drawer)
V3(a): updateShoppingCardState(drawer)
Wxa(a, b): scrollToCard(drawer, cardData)
W3(a): getCurrentCard(drawer)
Uxa(a, b): findCardDataById(drawer, cardId)
X3(a, b, c): createAnnotationBase(element, context, annotation)
Xxa(a): addAnnotationTimeRangeListeners(annotationBase)
Y3(a, b, c): createBrandingAnnotation(element, context, annotation)
Z3(a, b, c): createPromoAnnotation(element, context, annotation)
Yxa(a): createPromoAnnotationElement(annotation)
Zxa(a): collapsePromoAnnotation(annotation)
$xa(a): expandPromoAnnotation(annotation)
aya(a, b): setPromoCollapseTimer(annotation, delayMs)
$3(a): clearPromoCollapseTimer(annotation)
a4(a): createAnnotationsModule(player)
cya(a): isAnnotationEditor(playerStyle)
bya(a): shouldLoadAnnotations(module)
dya(a, b, c): sendAnnotationDataRequest(module, url, options)
eya(a, b): parseAnnotationXml(module, xmlElement)
fya(a, b, c): hasAnnotationDataChanged(module, dataVersion, videoId)
hya(a, b): createAnnotationView(module, annotation)
iya(a, b): createCustomAnnotation(module, annotation)
lya(a): loadLegacyAnnotations(module)
kya(a, b): addLegacyAnnotationParams(options, data)
mya(a): createCardDrawer(module)
b4(a): getModuleContext(module)
c4(a, b): parseAnnotationXmlAndCreateViews(module, xmlData)
nya(a): logAnnotationImpression(xmlData)
pya(a, b, c, d): updateAnnotationVisibility(module, annotationId, trigger, isVisible)
d4(a, b, c): hideAnnotation(module, annotationId, trigger)
oya(a, b, c): showAnnotation(module,annotationId, trigger)
qya(a, b): shouldOpenUrlInCurrentPage(module, linkObject)
gya(a, b): createAnnotationView(module, annotation)
rya(a): isSupportedAnnotationType(annotation)
e4(a, b, c, d): triggerAnnotationEvent(module, eventName, value, id)
jya(a, b): createWrappedCallback(module, callback)
f4(a, b, c): findTargetElementForEvent(eventName, className, targetElement)
h4(a): handleEventBehavior(event)
i4(a, b): createUiBase(componentName)
Z(a, b): getUiClassName(uiBase, suffix)
j4(a, b, c): addEventListener(uiBase, eventName, listener)
k4(a, b, c): subscribeToEvent(uiBase, eventName, listener)
l4(): createButtonUi()
sya(a, b, c, d, e): handleButtonMenuKeyEvents(buttonUi, buttonElement, menuElement, event, customHandler)
m4(a, b): findHighlightedMenuItem(buttonUi, menuElement)
tya(a, b, c): highlightMenuItem(buttonUi, buttonElement, menuItem)
uya(a, b, c, d): calculateNextMenuItemIndex(currentMenuItem, menuItems, itemsPerRow, event)
o4(a, b): createButtonMenuMask(buttonUi, buttonElement)
p4(a, b, c, d): positionButtonMenu(buttonUi, buttonElement, menuElement, isFixed)
vya(a, b): getButtonMenuRootContainer(buttonUi, buttonElement)
n4(a, b): closeButtonMenu(buttonUi, buttonElement)
wya(a, b, c): markMenuItemSelected(buttonUi, menuElement, selectedItem)
q4(a, b): getButtonMenu(buttonUi, buttonElement)
r4(a): closeActiveButtonMenu(buttonUi)
s4(a): createCardUi(type)
xya(a, b, c): createCardElement(cardUi, targetElement, contentElement)
yya(a, b, c): positionCard(cardUi, targetElement, cardElement)
t4(a): hideActiveCard(cardUi)
zya(a): createCardMask(cardElement)
u4(): createKeyboardNavigationUi()
Aya(a, b, c): setMoveOutTarget(keyboardNavigationUi, sourceElement, targetElement)
Bya(a, b): highlightListItem(keyboardNavigationUi, listElement)
Cya(a): getFocusableListItems(listElement)
w4(): createMenuUi()
x4(a): getMenuForElement(element)
Dya(a, b, c): positionMenu(menuUi, triggerElement, menuElement)
Fya(a, b, c): toggleMenu(menuUi, triggerElement, hover)
Eya(a, b): closeOtherMenus(menuUi, triggerElement)
A4(a, b): closeMenusInGroup(menuUi, triggerElement)
B4(a, b): closeMenu(menuUi, triggerElement)
Gya(a, b): setMenuAccessibilityAttributes(menuUi, triggerElement)
Hya(a, b, c): updateCheckedMenuItem(menuUi, triggerElement, menuElement)
z4(a, b): isMenuOpen(menuUi, triggerElement)
Iya(a): initializeMenus(contextElement)
C4(a, b): getMenuContent(menuUi, triggerElement)
y4(a, b): getMenuMask(menuUi, triggerElement)
D4(a, b): getMenuTrigger(menuUi, triggerElement)
Jya(a, b): isElementInActiveMenu(menuUi, element)
E4(): createClickCardUi()
F4(): createHoverCardUi()
G4(a, b, c, d, e, f): createDialog(element, allowShortcuts, dismissOnOutsideClick, showDismissButton, isLightDismiss, isModal)
Lya(a, b): subscribeToDialogEvent(dialog, callback)
Kya(a): showDialogContent(dialog)
Nya(): getVisibleDialogs()
Oya(a): initializeIframes(dialog)
Pya(a): hideOtherIframes(iframes)
Qya(): showHiddenIframes()
Rya(a): focusDialog(dialog)
H4(): createOverlayUi()
Tya(a): initializeOverlay(overlayUi)
Uya(a): closeOverlay(overlayUi)
Vya(a, b): getDialogElement(parent, target)
Wya(): getActiveDialogElement()
Sya(): handleOverlayHide()
I4(): createTooltipUi()
Xya(a, b, c): setTooltipText(tooltipUi, element, text)
Yya(a, b): getTooltipText(tooltipUi, element)
aza(a, b): showTooltip(tooltipUi, element)
$ya(a, b, c, d, e, f): positionTooltip(tooltipUi, element, tooltipElement, tipBody, tipMask, isReversed)
J4(a, b, c): generateTooltipId(tooltipUi, element, suffix)
Zya(a, b): getTooltipMask(tooltipUi, element)
bza(a): manageSharedTooltipMask(element)
K4
L4
cza
M4
dza
eza
P4(): createSubscriptionButtonUi()
fza(a, b): getYpcData(subscriptionButtonUi, element)
gza(a, b): updateSubscriptionButtonState(subscriptionButtonUi, element)
hza(a, b): getSubscriptionButtonsForChannel(subscriptionButtonUi, channelId)
iza(a, b): handleSubscriptionClick(subscriptionButtonUi, element)
jza(a, b): shouldShowUnsubscribeConfirmation(subscriptionButtonUi, element)
tva
uva
xva
zva
